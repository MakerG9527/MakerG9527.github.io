<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>路由器刷OpenWRT</title>
      <link href="/posts/86767a69.html"/>
      <url>/posts/86767a69.html</url>
      
        <content type="html"><![CDATA[<h1 id="路由器刷机有什么好处？"><a href="#路由器刷机有什么好处？" class="headerlink" title="路由器刷机有什么好处？"></a>路由器刷机有什么好处？</h1><p>首先，路由器的硬件本身其实就是ARM，MIPS或PowerPC架构的，就和我们的电脑一样，可以拥有自己的操作系统。而OpenWRT就是针对路由器这类网络设备，并基于Linux开发的开源系统。</p><p>也就是说，我们可以通过给路由器刷OpenWRT，让它具有更丰富而强大的功能，比如可以自定义路由器的规则，当我们在打排位时，让其他设备都靠边站，不要过多占用带宽；或者安装相关软件包，实现浏览器广告拦截，内网穿透，以及让连接的设备都拥有魔法<del>懂得都懂</del>。</p><h1 id="可刷的固件有哪些？"><a href="#可刷的固件有哪些？" class="headerlink" title="可刷的固件有哪些？"></a>可刷的固件有哪些？</h1><p>关于这个问题，大家可以直接问AI，让它联网搜索一下最新结果。或者上恩山无线论坛<a href="https://www.right.com.cn/forum/">https://www.right.com.cn/forum/</a> ，找找相关帖子（这个论坛算是国内最老，最专业的无线网络技术论坛了）。</p><p>我在这列举几个常见的，比如小米AX3600，红米AX6000，思创CT3003，360的T7，<br>斐讯的K2P、K3C，H3C的NX30 Pro，极路由的WDR5630、WDR5633，华硕的AC88U，中国移动的RAX3000M，还有GL.iNet的系列产品。</p><p>我以前其实还买过一块香橙派R1 Plus LST，有两个千兆网卡和1G内存，结果摔坏了。。。。。</p><p>于是我在寒假买了一台新华三的NX30 Pro，感觉200以内配置算很可以的了，关键是刷机方便（dog）</p><h1 id="开刷！"><a href="#开刷！" class="headerlink" title="开刷！"></a>开刷！</h1><p>本次所需的文件均放在了<a href="https://github.com/MakerG9527/OpenWRT-for-H3C-NX30-Pro">https://github.com/MakerG9527/OpenWRT-for-H3C-NX30-Pro</a> ，大家可以先手动下载。</p><h2 id="TELNET模式远程连接"><a href="#TELNET模式远程连接" class="headerlink" title="TELNET模式远程连接"></a>TELNET模式远程连接</h2><p>先给H3C NX30 Pro插上电源和网线，然后用电脑连上它的WiFi，或者用网线连它也行。</p><p>打开Xshell，IP地址是 <code>192.168.124.1</code> ,端口号99，H3C的 <code>TELNET</code> 默认是开启的，<br>而 <code>SSH</code> 默认是关闭的，协议选择 <code>TELNET</code> 连接。</p><p><img src="https://bu.dusays.com/2025/01/20/678dafcd805ff.png" alt="图床" title="xshell连接"> </p><p>账号名为 <code>H3C</code>， 密码则为路由器的密码，初始时为空。</p><p><img src="https://bu.dusays.com/2025/01/20/678dafcd7cdfb.png" alt="图床" title="xshell账号密码"> </p><h2 id="开启SSH"><a href="#开启SSH" class="headerlink" title="开启SSH"></a>开启SSH</h2><p>在命令行中依次输入：</p><p> <code>curl -o /tmp/dropbear.ipk https://downloads.openwrt.org/releases/packages-19.07/aarch64_cortex-a53/base/dropbear_2019.78-2_aarch64_cortex-a53.ipk</code></p><p><code>opkg install /tmp/dropbear.ipk</code></p><p><code>/etc/init.d/dropbear enable</code></p><p><code>/etc/init.d/dropbear start</code></p><p><img src="https://bu.dusays.com/2025/01/20/678db5113c42c.png" alt="图床" title="开启SSH"></p><h2 id="备份系统"><a href="#备份系统" class="headerlink" title="备份系统"></a>备份系统</h2><p>在命令行输入：</p><p><code>dd if=/dev/mtd5 of=/tmp/backup.img</code></p><p>将系统保存到 <code>tmp</code> 路径下，这个过程比较慢，大概要1~5分钟，wait a minute。</p><p><img src="https://bu.dusays.com/2025/01/20/678db6cbe7ede.png" alt="图床" title="系统备份"></p><p>文件传输我们用WinSCP，将系统镜像保存到电脑上，防止出现意外变砖</p><p>进入官网选择下载：<a href="https://winscp.net/eng/index.php">https://winscp.net/eng/index.php</a></p><p>文件协议选择 <code>SCP</code>， 由于已经开启了SSH，因此端口号选择 <code>22</code>。</p><p><img src="https://bu.dusays.com/2025/01/20/678db8841a716.png" alt="图床" title="winscp登录"></p><p>选择 <code>tmp</code> 目录。</p><p><img src="https://bu.dusays.com/2025/01/20/678dba23dd19b.png" alt="图床" title="选择目录"></p><p>将右侧 <code>backup.img</code> 拖到左侧电脑进行保存。</p><p><img src="https://bu.dusays.com/2025/01/20/678dc27455a5e.png" alt="图床" title="选择目录"></p><h2 id="刷入uboot"><a href="#刷入uboot" class="headerlink" title="刷入uboot"></a>刷入uboot</h2><p>我们可以把uboot理解为电脑的BIOS，它主要是嵌入式设备的一个开机引导程序，负责对硬件进行初始化。另外，我们可以利用uboot帮助我们刷写系统。</p><p>找到对应的路由器型号的 <code>uboot.bin</code> 文件，保存到电脑上，然后拖入刚才右侧的 <code>/tmp</code> 路径下。</p><p><img src="https://bu.dusays.com/2025/01/20/678dec8053937.png" alt="图床" title="选择目录"></p><p>然后打开xshell，输入 <code>cd /tmp</code> 打开 <code>/tmp</code> 目录，可以看到刚刚放进来的文件</p><p>输入 <code>md5sum uboot.bin</code> 查看校验码，结果必须和这个一致，否则刷了会变砖。</p><p><img src="https://bu.dusays.com/2025/01/20/678decc0187db.png" alt="图床" title="烧入uboot"></p><p>确定后输入 <code>mtd write /tmp/uboot.bin FIP</code> 刷入uboot。</p><h2 id="进入uboot"><a href="#进入uboot" class="headerlink" title="进入uboot"></a>进入uboot</h2><p>给路由器断电，先按住背后Reset按钮不放，再插电。上电后等待 10s 左右松开背后Reset，路由器就进入了uboot。</p><p>用网线连接路由器LAN1和电脑的网口，关闭 <code>DHCP</code>，选择手动，然后点击 <code>编辑</code>：</p><p>IP地址为 <code>192.168.1.2</code>，子网掩码 <code>255.255.255.0</code> ，网关 <code>192.168.1.1</code>，DNS <code>192.168.1.1</code>。</p><p><img src="https://bu.dusays.com/2025/01/20/678deded01312.png" alt="图床" title="IP设置"></p><p>保存后，打开浏览器，网址输入 <code>192.168.1.1</code>， 即可进入uboot后台。</p><p>选择固件，再点击 <code>Upload</code>。</p><p><img src="https://bu.dusays.com/2025/01/20/678deeeb76041.png" alt="图床" title="进入uboot"></p><p>然后点击 <code>Update</code>。</p><p><img src="https://bu.dusays.com/2025/01/20/678e11163f1a2.png" alt="图床" title="update"></p><p>此界面说明刷入OpenWRT成功！</p><p><img src="https://bu.dusays.com/2025/01/20/678def724e142.png" alt="图床" title="成功"></p><h1 id="进入OpenWRT界面"><a href="#进入OpenWRT界面" class="headerlink" title="进入OpenWRT界面"></a>进入OpenWRT界面</h1><p>重新选择 <code>DHCP</code></p><p><img src="https://bu.dusays.com/2025/01/20/678e04fa273c3.png" alt="图床" title="DHCP"></p><p>在浏览器输入 <code>192.168.6.1</code> ，默认账号名 <code>root</code>，密码为 <code>password</code></p><p><img src="https://bu.dusays.com/2025/01/20/678e0511a9e3a.png" alt="图床" title="登录"></p><h2 id="修改WiFi密码"><a href="#修改WiFi密码" class="headerlink" title="修改WiFi密码"></a>修改WiFi密码</h2><p>在 <code>网络</code> -&gt; <code>无线</code> 中，点击配置，2.4G和5G的都改一下</p><p><img src="https://bu.dusays.com/2025/01/20/678e0610cda42.png" alt="图床" title="修改WiFi"></p><p><code>认证模式</code> 改成 <code>WPA2-PSK</code> 或 <code>WPA2-PSK/WPA3-SAE</code>，<code>password</code> 改成自己的密码，然后点击下方的 <code>保存&amp;应用</code> 即可。</p><p><img src="https://bu.dusays.com/2025/01/20/678e065255be0.png" alt="图床" title="修改WiFi"></p><h2 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h2><p>在 <code>系统</code> -&gt; <code>软件包</code> 中可以查找并安装需要的软件，比如内网穿透的 <code>zerotier</code>,<br>安装完后直接在 <code>VPN</code> 中可以找到。</p><p><img src="https://bu.dusays.com/2025/01/20/678e09333d53d.png" alt="图床" title="zerotier"></p><p><img src="https://bu.dusays.com/2025/01/20/678e0ac82c076.png" alt="图床" title="zerotier"></p><h1 id="刷回原系统"><a href="#刷回原系统" class="headerlink" title="刷回原系统"></a>刷回原系统</h1><p>得益于之前的备份，我们直接在uboot中选择 <code>backup.img</code> 然后上传即可！</p>]]></content>
      
      
      <categories>
          
          <category> 网络工程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>OpenCV入门</title>
      <link href="/posts/867cb050.html"/>
      <url>/posts/867cb050.html</url>
      
        <content type="html"><![CDATA[<h1 id="使用Jupyter-Notebook"><a href="#使用Jupyter-Notebook" class="headerlink" title="使用Jupyter Notebook"></a>使用Jupyter Notebook</h1><p>来不及解释了，直接上手吧！</p><p>打开Anaconda Prompt，激活虚拟环境: <code>conda activate venv</code></p><p>安装Jupyter: <code>pip install jupyter notebook</code></p><p>安装完成后，关联Anaconda内核:<br><code>python -m ipykernel install --user --name=venv --display-name=&quot;Python (venv）&quot;</code></p><p>其中 <code>venv</code> 可以换成自己的虚拟环境名，其他一样</p><p><img src="https://bu.dusays.com/2025/01/15/678741d3a0dd6.png" alt="图床" title="更换内核"></p><p>在这之前，我们先安装几个必要的库<code>pip install opencv-python numpy matplotlib</code></p><p>然后，启动Jupyter，输入：<code>jupyter notebook</code></p><p>此时浏览器会弹出一个窗口，就是它了，我们新建一个 <code>Notebook</code></p><p><img src="https://bu.dusays.com/2025/01/15/678742152f29e.png" alt="图床" title="更换内核"></p><p>由于我们已经关联了 <code>Anaconda</code> 内核，此时就会显示其虚拟环境，选择 <code>venv</code></p><p><img src="https://bu.dusays.com/2025/01/15/678742661c7da.png" alt="图床" title="选择内核"></p><h1 id="如何退出Jupyter"><a href="#如何退出Jupyter" class="headerlink" title="如何退出Jupyter"></a>如何退出Jupyter</h1><p>注意，在使用过程中不要关闭 <code>Anaconda Prompt</code>！</p><p>退出时，只需在Prompt中输入 <code>Ctrl + C</code> 即可</p><p><img src="https://bu.dusays.com/2025/01/15/678743c68583e.png" alt="图床" title="退出"></p><h1 id="OpenCV基本操作"><a href="#OpenCV基本操作" class="headerlink" title="OpenCV基本操作"></a>OpenCV基本操作</h1><p>在开始正式正式学习之前，我们可以先动手跑一个代码，开启电脑的摄像头，按<code>q</code>键退出，并保存最后一帧图像：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开摄像头</span></span><br><span class="line">cap = cv2.VideoCapture(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查摄像头是否成功打开</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> cap.isOpened():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;无法打开摄像头&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 逐帧捕获</span></span><br><span class="line">    ret, frame = cap.read()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果正确读取帧，ret为True</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> ret:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;无法读取帧&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 显示结果帧</span></span><br><span class="line">    cv2.imshow(<span class="string">&#x27;摄像头&#x27;</span>, frame)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 按下q键时退出循环</span></span><br><span class="line">    <span class="keyword">if</span> cv2.waitKey(<span class="number">1</span>) == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line">        <span class="comment"># 保存最后一帧图像</span></span><br><span class="line">        cv2.imwrite(<span class="string">&#x27;last_frame.jpg&#x27;</span>, frame)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 释放摄像头</span></span><br><span class="line">cap.release()</span><br><span class="line"><span class="comment"># 关闭所有 OpenCV 窗口</span></span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p>咳咳，我其实写了挺多内容的，但是后面实在太多了，大家还是直接看教程自学吧《逃：</p><p><a href="https://apachecn.github.io/opencv-doc-zh/#/">https://apachecn.github.io/opencv-doc-zh/#/</a></p><p><a href="https://www.runoob.com/opencv/opencv-tutorial.html">https://www.runoob.com/opencv/opencv-tutorial.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习入门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>树莓派搭建Minecraft服务器</title>
      <link href="/posts/a747602e.html"/>
      <url>/posts/a747602e.html</url>
      
        <content type="html"><![CDATA[<h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>首先，我的世界官方其实已经把服务器端写好了，只需要找一个能运行它的机器。与此同时，为了能远方的小伙伴都能一起加入，我们还需要一个公网ip。</p><p>因此，有两种基本方法：</p><h2 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h2><p>将我的世界服务器直接运行在有公网ip的机器上，可以是云服务器，也可以想办法让运营商给家里的光猫分配公网ip，然后再连机器。<br>但是我的世界服务器端至少需要2G的内存，也就是说起码得买4G的云服务器，如果去腾讯，阿里或者华为云官网看看就知道这属于是富哥玩法了。<br>然后和运营商周旋也比较麻烦，所以还是用方法二吧。。</p><h2 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h2><p>将我的世界服务器运行在本地(没有公网ip)的机器上，然后再将服务器运行的端口映射到云服务器的端口上，<br>小伙伴访问云服务器的端口，云服务器再和那台运行着我的世界服务器的，没有公网ip的机器通信。<br>只将这个公网ip的云服务器作为一个中转站，那么这个云服务就不再需要那么高的配置，只需要买最便宜的就可以了。</p><h1 id="配置Java-JDK"><a href="#配置Java-JDK" class="headerlink" title="配置Java JDK"></a>配置Java JDK</h1><p>我的世界本身是用Java写的，因此服务器也需要一个Java的编译环境</p><p>在终端依次输入:</p><p><code>sudo apt update</code></p><p><code>sudo apt install defult-jdk</code></p><p>完成后输入 <code>java -version</code> 查看当前Java版本</p><p><img src="https://bu.dusays.com/2024/10/20/6715133b703b4.png" alt="图床" title="jdk"></p><p>以下是社区的Java版本和游戏版本的关系：</p><p><img src="https://bu.dusays.com/2024/10/20/6715133b8452a.png" alt="图床" title="jdk"></p><p>我试过安装 <code>Java 21</code>，但失败了，也就是说目前最新只能玩1.20.4</p><p><img src="https://bu.dusays.com/2024/10/20/6715133b6fcc6.png" alt="图床" title="jdk"></p><h1 id="配置我的世界服务器端"><a href="#配置我的世界服务器端" class="headerlink" title="配置我的世界服务器端"></a>配置我的世界服务器端</h1><p>这里我们用<code>fabric</code>启动器，可以支持更多光影和mod：<a href="https://fabricmc.net/use/server/">https://fabricmc.net/use/server/</a></p><p>选择<code>1.20.4</code></p><p><img src="https://bu.dusays.com/2024/10/20/6715133b6fcd0.png" alt="图床" title="服务器"></p><p>建议先创建一个文件夹，作为服务器的目录，不然待会文件可能会散出来：<code>mkdir fabric</code> <code>cd fabric</code></p><p>进到刚刚创建的文件夹后，复制网页下面的指令：</p><p><code>curl -OJ https://meta.fabricmc.net/v2/versions/loader/1.20.4/0.16.7/1.0.1/server/jar</code></p><p><code>java -Xmx2G -jar fabric-server-mc.1.20.4-loader.0.16.7-launcher.1.0.1.jar nogui</code></p><p>然后会显示：</p><p><img src="https://bu.dusays.com/2024/10/20/6715133b86e8b.png" alt="图床" title="服务器"></p><p>这个并不是报错，只是要我们同意一下，修改文件夹中的 <code>eula.txt</code> 文件，将 <code>false</code> 改为 <code>true</code> 重复第二条指令即可</p><p><img src="https://bu.dusays.com/2024/10/20/6715139dd3d6d.png" alt="图床" title="服务器"></p><p>然后再执行一下刚才的第二条指令就可以了，但是我们先配置一下端口映射</p><h1 id="配置frp服务"><a href="#配置frp服务" class="headerlink" title="配置frp服务"></a>配置frp服务</h1><p>基本和之前那篇环境配置的教程中的一致，主要是修改树莓派客户端的<code>localPort</code>的值，改成我的世界服务器默认的<code>25565</code></p><p><img src="https://bu.dusays.com/2024/10/20/6715139db7fb9.png" alt="图床" title="frp"></p><p>注：<code>25565</code> 也可以修改成别的端口号，在 <code>server.properties</code> 中修改 <code>server-port</code> 即可</p><p><img src="https://bu.dusays.com/2024/10/20/6715139dce144.png" alt="图床" title="服务器"></p><p>由于树莓派性能毕竟有限，建议把 <code>view-distance</code> 改成 <code>6</code> , <code>max-player</code> 改成 <code>5</code> , <code>max-world-size</code> 设置为 <code>1000</code>(2000×2000地图边界)，还有最好把 <code>white-list</code> 也开了，这样陌生人就进不来了(之前就被外国佬进来放过岩浆墙把村庄毁了QAQ) </p><p>然后和之前一样，分别开启服务器和客户端的frp</p><p>注意要把云服务器的端口开放一下，这里以腾讯云为例：</p><p><img src="https://bu.dusays.com/2024/10/20/6715139debf12.png" alt="图床" title="服务器"></p><p>树莓派默认是没装防火墙的，所以全部端口都是开放的，但是如果装了防火墙 <code>ufw</code> ，记得把端口也开一下</p><p>搞定之后就按之前的方法，分别开启frp服务吧</p><h1 id="上号"><a href="#上号" class="headerlink" title="上号"></a>上号</h1><p>okk，现在万事具备了，回到树莓派的 <code>fabric</code> 文件夹，再次输入 </p><p><code>java -Xmx2G -jar fabric-server-mc.1.20.4-loader.0.16.7-launcher.1.0.1.jar nogui</code></p><p>看到 <code>Done!</code> 后，说明世界已经创建成功了</p><p>(插句题外话，这条指令有点长，如果嫌麻烦可以写一个shell脚本：</p><p><code>nano begin.sh</code> 粘贴那条指令，然后保存退出。</p><p>以后直接用<code>bash begin.sh</code> 可以启动了！)</p><p><img src="https://bu.dusays.com/2024/11/28/674857f8485f9.jpg" alt="图床" title="shell脚本"></p><p><img src="https://bu.dusays.com/2024/10/20/6715139e04282.png" alt="图床" title="上号"></p><p>接下来打开游戏，点击 <code>多人游戏</code> -&gt; <code>添加服务器</code>，输入ip:端口号</p><p>注意 <code>:</code> 是英文符号！</p><p><img src="https://bu.dusays.com/2024/10/20/671513e7009bf.png" alt="图床" title="上号"></p><p><img src="https://bu.dusays.com/2024/10/20/671513dd81b21.png" alt="图床" title="上号"></p><p><img src="https://bu.dusays.com/2024/10/20/671513dd7c988.png" alt="图床" title="上号"></p><p>但是由于刚才为了不被打扰，我们开启白名单，所以会出现：</p><p><img src="https://bu.dusays.com/2024/10/20/671513dd79ab6.png" alt="图床" title="上号"></p><p>别急，我们再看到树莓派的服务端，用 <code>whitelist add 用户名</code> 指令将玩家加入白名单</p><p>在游戏里再刷新一下，这次就能进入啦！！！</p><p><img src="https://bu.dusays.com/2024/10/20/671513e34d8da.png" alt="图床" title="上号"></p><p>在服务器上，用指令 <code>op 用户名</code>，可以给玩家管理员权限</p><p><img src="https://bu.dusays.com/2024/10/20/67151416c4219.png" alt="图床" title="上号"></p><h1 id="保存并关闭服务器"><a href="#保存并关闭服务器" class="headerlink" title="保存并关闭服务器"></a>保存并关闭服务器</h1><p>在终端输入 <code>stop</code> 即可优雅地关闭服务器</p><p><img src="https://bu.dusays.com/2024/10/20/671514124d064.png" alt="图床" title="关服"></p><p>游戏存档都在 <code>world</code> 文件夹内</p><h1 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h1><p>之前挂后台主要用的指令是 <code>nohup ... &amp;</code> ， 但是这样的话只能通过 <code>kill</code> 指令把进程杀掉，<br>无法切换到前台用 <code>stop</code> 保存后删除。因此我们需要一个新的可以将进程重新切回前台的指令：</p><p>那就是 <code>screen</code> ! 它可以创建新会话，就算退出xshell也依然存在，并且可以随时切换进入新会话。</p><p>输入 <code>screen -S minecraft</code> 先创建一个新的会话，会话名就叫minecraft吧</p><p><code>java -Xmx2G -jar fabric-server-mc.1.20.4-loader.0.16.7-launcher.1.0.1.jar nogui</code> 正常启动服务器</p><p>然后，按Ctrl+A再按D，分离screen会话</p><p><code>screen -ls</code> 可查看当前所有screen</p><p><code>screen -r minecraft</code> 重新连接会话</p><p><img src="https://bu.dusays.com/2024/11/28/674855345f34e.png" alt="图床" title="关服"></p><p>输入 <code>exit</code> 即可退出并删除这个会话</p><p>注意，这个 <code>exit</code> 需要连接进入那个会话之后才能删除</p><p>如果是想不进入直接删，用指令 <code>screen -S -X -S minecraft quit</code> 即可</p><h1 id="游戏截图"><a href="#游戏截图" class="headerlink" title="游戏截图"></a>游戏截图</h1><p>这是大一暑假和小伙伴们的美好回忆</p><p>最菜就是我了，其他都是mc牢玩家了</p><p><img src="https://bu.dusays.com/2024/10/20/671515fae1a23.png" alt="图床" title="关服"></p><p><img src="https://bu.dusays.com/2024/10/20/6715160756730.png" alt="图床" title="关服"></p><p><img src="https://bu.dusays.com/2024/10/20/6715165678c00.png" alt="图床" title="关服"></p><p><img src="https://bu.dusays.com/2024/10/20/671516103db15.png" alt="图床" title="关服"></p><p><img src="https://bu.dusays.com/2024/10/20/6715161732fd9.png" alt="图床" title="关服"></p><p><img src="https://bu.dusays.com/2024/10/20/6715169928c28.png" alt="图床" title="关服"></p><p><img src="https://bu.dusays.com/2024/10/20/6715169951a52.png" alt="图床" title="关服"></p><p><img src="https://bu.dusays.com/2024/10/20/6715169f362a9.png" alt="图床" title="关服"></p><p><img src="https://bu.dusays.com/2024/10/20/671516a0e1c5c.png" alt="图床" title="关服"></p><p><img src="https://bu.dusays.com/2024/10/20/67151687a6378.png" alt="图床" title="关服"></p><p><img src="https://bu.dusays.com/2024/10/20/671516e33dc2d.png" alt="图床" title="关服"></p>]]></content>
      
      
      <categories>
          
          <category> 一口一个树莓派 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>树莓派服务器环境配置</title>
      <link href="/posts/bc6bd085.html"/>
      <url>/posts/bc6bd085.html</url>
      
        <content type="html"><![CDATA[<h1 id="我的树莓派"><a href="#我的树莓派" class="headerlink" title="我的树莓派"></a>我的树莓派</h1><p>梦开始的地方</p><p><img src="https://bu.dusays.com/2024/10/19/6713c56e611bd.jpg" alt="图床" title="Pi"> </p><p><img src="https://bu.dusays.com/2024/10/19/6713c5610ed0b.jpg" alt="图床" title="Pi"></p><h1 id="系统烧录-amp-开机"><a href="#系统烧录-amp-开机" class="headerlink" title="系统烧录&amp;开机"></a>系统烧录&amp;开机</h1><p>将SD卡插入读卡机并连接电脑，可以用DiskGenius格式化一下</p><p>软件连接：<a href="https://www.diskgenius.cn/download.php">https://www.diskgenius.cn/download.php</a></p><p>清除SD卡的所有分区</p><p><img src="https://bu.dusays.com/2024/10/19/6713c14ef2c09.png" alt="图床" title="DG"> </p><p>点击左上角的<code>保存更改</code></p><p><img src="https://bu.dusays.com/2024/10/19/6713c14d3bbcf.png" alt="图床" title="DG"> </p><p>新建一个分区</p><p><img src="https://bu.dusays.com/2024/10/19/6713c14e0b887.png" alt="图床" title="DG"> </p><p>注意选择<code>NTFS</code>格式</p><p><img src="https://bu.dusays.com/2024/10/19/6713c14d3ec70.png" alt="图床" title="DG"> </p><p>接下来的系统烧录方式大致有两种：</p><p>方法一：直接使用树莓派官方烧录工具，无需手动下载镜像</p><p>树莓派官方烧录软件连接：<a href="https://www.raspberrypi.com/software/">https://www.raspberrypi.com/software/</a></p><p><img src="https://bu.dusays.com/2024/10/19/6713c14d76ae5.png" alt="图床" title="官方烧录工具"> </p><p><img src="https://bu.dusays.com/2024/10/19/6713c199c3b39.png" alt="图床" title="官方烧录工具"> </p><p>以树莓派5为例，以下是官方的镜像，官方烧录工具会自动从官网下载镜像</p><p><img src="https://bu.dusays.com/2024/10/19/6713c19a11bd1.png" alt="图床" title="官方烧录工具"> </p><p>选择自己需要的镜像，点击next，然后点击<code>是</code></p><p><img src="https://bu.dusays.com/2024/10/19/6713c199bc5a9.png" alt="图床" title="官方烧录工具"> </p><p><img src="https://bu.dusays.com/2024/10/19/6713c199bc5de.png" alt="图床" title="官方烧录工具"> </p><p>方法二：下载好镜像后，再使用第三方烧录工具烧录</p><p>树莓派镜像下载连接：<a href="https://www.raspberrypi.com/software/operating-systems/">https://www.raspberrypi.com/software/operating-systems/</a></p><p><img src="https://bu.dusays.com/2024/10/19/6713c19a1fe76.png" alt="图床" title="官方镜像"> </p><p>第三方烧录软件连接：<a href="https://sourceforge.net/projects/win32diskimager/">https://sourceforge.net/projects/win32diskimager/</a></p><p>选择 <code>Yes</code></p><p><img src="https://bu.dusays.com/2024/10/19/6713c1dd443de.png" alt="图床" title="官方镜像烧录"> </p><p>烧录完成后，将SD卡插入树莓派的卡槽中，接电源，当绿灯不规则闪烁结束后，即开机成功</p><p>注意，如果在树莓派开机后再连接显示器的话，要先接显示器的电源线，再接显示器的HDMI线，否则无法正常显示！</p><h1 id="开启SSH服务"><a href="#开启SSH服务" class="headerlink" title="开启SSH服务"></a>开启SSH服务</h1><h2 id="方法一：直接输入指令"><a href="#方法一：直接输入指令" class="headerlink" title="方法一：直接输入指令"></a>方法一：直接输入指令</h2><p>在终端输入:<br><code>sudo systemctl enable ssh</code><br><code>sudo systemctl start ssh</code></p><h2 id="方法二：在raspi-config中设置"><a href="#方法二：在raspi-config中设置" class="headerlink" title="方法二：在raspi-config中设置"></a>方法二：在raspi-config中设置</h2><p>在终端输入：<br><code>sudo raspi-config</code></p><p>输入 <code>↓</code> 至 <code>Inerface Options</code>，输入 <code>→</code> 至 <code>Select</code>，然后按回车<code>Enter</code></p><p><img src="https://bu.dusays.com/2024/10/19/6713c1dd76321.png" alt="图床" title="ssh设置"> </p><p>选择第一个 <code>SSH</code>，开启</p><p><img src="https://bu.dusays.com/2024/10/19/6713c1dd81f89.png" alt="图床" title="ssh设置"> </p><p><img src="https://bu.dusays.com/2024/10/19/6713c1dd6aa34.png" alt="图床" title="ssh设置"> </p><p>然后回到主页面，选择 <code>Back</code></p><h1 id="连接WiFi"><a href="#连接WiFi" class="headerlink" title="连接WiFi"></a>连接WiFi</h1><p>查看WiFi启用状态命令：<code>nmcli radio wifi</code><br>开启WiFi状态命令：<code>nmcli radio wifi on</code><br>关闭WiFi状态命令：<code>nmcli radio wifi off</code><br>查找网络命令：<code>sudo nmcli dev wifi list</code></p><p><img src="https://bu.dusays.com/2024/10/19/6713c1dde694e.png" alt="图床" title="wifi设置"> </p><p>注意：若没有设置地区，则首次连接网络需要先设置地区才可以进行网络配置,若没有设置过地区则需要先使用raspi-config工具设置WLAN国家/地区，然后再使用命令行配置网络:<br>终端输入 <code>sudo raspi-config</code><br>设置WLAN国家/地区：<br>Localisation Options → WLAN Country → CN China → OK<br>完成以上选项设置后，选择Finish退出raspi-config工具。</p><h1 id="查看ip地址"><a href="#查看ip地址" class="headerlink" title="查看ip地址"></a>查看ip地址</h1><p>在终端输入：<code>ifconfig</code></p><p><img src="https://bu.dusays.com/2024/10/19/6713c24646d0f.png" alt="图床" title="ip地址"> </p><h1 id="使用Xshell远程连接"><a href="#使用Xshell远程连接" class="headerlink" title="使用Xshell远程连接"></a>使用Xshell远程连接</h1><p>Xshell破解版下载地址：<a href="https://wwqm.lanzouk.com/isqbP130txwj">https://wwqm.lanzouk.com/isqbP130txwj</a></p><p>点击左上角，新建一个ssh连接</p><p><img src="https://bu.dusays.com/2024/10/19/6713c2460cd80.png" alt="图床" title="xshell"></p><p><code>名称</code> 可以自己填，只是链接的备注<br><code>主机</code> 是刚刚看到的ip地址(可以自行了解局域网，公网ip等概念)</p><p><img src="https://bu.dusays.com/2024/10/19/6713c24698b99.png" alt="图床" title="xshell"></p><p>点击左侧 <code>用户身份验证</code>，输入用户名和密码</p><p>注：在终端输入 <code>sudo passwd</code> 可以修改密码</p><p><img src="https://bu.dusays.com/2024/10/19/6713c2462976e.png" alt="图床" title="xshell"></p><p>连接成功！</p><h1 id="更换国内镜像源"><a href="#更换国内镜像源" class="headerlink" title="更换国内镜像源"></a>更换国内镜像源</h1><p>清华源官方教程：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/">https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/</a></p><p>终端输入：</p><p><code>sudo nano /etc/apt/sources.list</code></p><p>注：如果没有 <code>nano</code> ，输入 <code>sudo apt-get install nano</code> 即可安装</p><p>注释原来的官方源，输入以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line"># 以下安全更新软件源包含了官方源与镜像站配置，如有需要可自行修改注释切换</span><br><span class="line">deb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware</span><br><span class="line"># deb-src https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware</span><br></pre></td></tr></table></figure><p>按下 <code>Ctrl + x</code> + <code>y</code> + <code>Enter</code> 保存并退出</p><p><img src="https://bu.dusays.com/2024/10/19/6713c2a542adb.png" alt="图床" title="换源"></p><p>再输入 <code>sudo nano /etc/apt/sources.list.d/raspi.list</code></p><p>注释原来的官方源，输入以下内容</p><p><code>deb https://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ bookworm main</code></p><p><img src="https://bu.dusays.com/2024/10/19/6713c2a51d6dc.png" alt="图床" title="换源"></p><p>同样保存并退出</p><p>然后依次输入</p><p><code>sudo apt-get update</code></p><p><code>sudo apt-get upgrade</code></p><p>如果没有报错，即换源成功！</p><h1 id="安装Python-amp-创建虚拟环境"><a href="#安装Python-amp-创建虚拟环境" class="headerlink" title="安装Python&amp;创建虚拟环境"></a>安装Python&amp;创建虚拟环境</h1><p>一般安装软件之前都要先输入</p><p><code>sudo apt-get update</code></p><p><code>sudo apt-get upgrade</code></p><p>但是刚刚输入过了</p><p>终端输入</p><p><code>sudo apt-get install python3</code> 安装Python</p><p><code>python3 -m venv env</code> 创建名为 <code>env</code> 的虚拟环境</p><p><code>source env/bin/activate</code> 激活名为 <code>env</code> 的虚拟环境</p><p><code>which python3</code> 查看当前Python环境位置</p><p><code>python -V</code> 或 <code>python -version</code> 查看python版本</p><p><img src="https://bu.dusays.com/2024/10/19/6713c2a5135eb.png" alt="图床" title="python"></p><h1 id="查看CPU温度"><a href="#查看CPU温度" class="headerlink" title="查看CPU温度"></a>查看CPU温度</h1><p>可以直接写一个shell脚本，一键查看芯片温度</p><p>先创建一个.sh文件，终端输入<code>touch temp.sh</code>，创建一个叫<code>temp</code>的脚本，<code>nano temp.sh</code>编辑</p><p>按下鼠标右键，粘贴以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line"># 检查目录是否存在</span><br><span class="line">if [ ! -d &quot;/sys/class/thermal/thermal_zone0&quot; ]; then</span><br><span class="line">    echo &quot;Thermal zone directory does not exist.&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># 读取温度</span><br><span class="line">cd /sys/class/thermal/thermal_zone0</span><br><span class="line">temp=$(cat temp)</span><br><span class="line"></span><br><span class="line"># 检查是否成功读取温度</span><br><span class="line">if [ -z &quot;$temp&quot; ]; then</span><br><span class="line">    echo &quot;Failed to read temperature.&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># 计算温度</span><br><span class="line">temperature=$((temp / 1000))</span><br><span class="line"></span><br><span class="line"># 输出温度</span><br><span class="line">echo &quot;Current temperature: $temperature °C&quot;</span><br></pre></td></tr></table></figure><p>保存并退出</p><p>输入 <code>bash temp.sh</code> ，即可查看当前温度</p><p><img src="https://bu.dusays.com/2024/10/19/6713c2a4ede7b.png" alt="图床" title="temperature"></p><h1 id="frp端口映射"><a href="#frp端口映射" class="headerlink" title="frp端口映射"></a>frp端口映射</h1><p>进入frp的Release页面：<a href="https://github.com/fatedier/frp/releases">https://github.com/fatedier/frp/releases</a></p><p>树莓派5是arm64，云服务器一般是amd64，找到对应的包</p><p><img src="https://bu.dusays.com/2024/10/19/6713c2a534402.png" alt="图床" title="frp"></p><p>以树莓派的为例，按右键，复制文件连接</p><p><img src="https://bu.dusays.com/2024/10/19/6713c2de045c5.png" alt="图床" title="frp"></p><p>终端输入：<code>wget (链接名字)</code></p><p><code>wget https://github.com/fatedier/frp/releases/download/v0.61.0/frp_0.61.0_linux_arm64.tar.gz</code></p><p><code>tar -xzvf frp_0.61.0_linux_arm64.tar.gz</code> 解压到当前文件夹</p><p>但是解压后的文件名还是太长了，直接改叫<code>frp</code>吧，输入：</p><p><code>mv frp_0.61.0_linux_arm64 frp</code></p><p><img src="https://bu.dusays.com/2024/10/19/6713c2de07dc5.png" alt="图床" title="frp"></p><p><code>frp</code>文件夹里面有四个文件(许可证不算)，带s的是服务器端，c的是客户端，树莓派上就配置客户端</p><p><code>cd frp</code>进入到frp文件夹里</p><p>编辑客户端配置文件 <code>nano frpc.toml</code></p><p><img src="https://bu.dusays.com/2024/10/19/6713c2ddef6cb.png" alt="图床" title="frp"></p><p>其中 <code>serverAddr</code> 是服务器的公网ip，<code>serverPort</code> 是服务器监听的端口</p><p><code>name</code>相当于是备注，<code>localIP</code>是<code>ifconfig</code>得到的局域网ip，<code>localPort</code> 是要转发的端口，<code>remotePort</code> 是使用者访问时使用的端口</p><p>保存并退出</p><p>输入 <code>./frpc -c ./frpc.toml</code> 启动树莓派客户端的转发</p><p><img src="https://bu.dusays.com/2024/10/19/6713c2de070e7.png" alt="图床" title="frp"></p><p>服务器端默认是监听7000端口，与客户端一致，可以直接开启服务器端frp：<code>./frps -c ./frps.toml</code></p><p>(下载那个amd64的文件，操作相同)</p><p>服务器可以把 <code>frps</code> 挂后台，用指令 <code>nohup ./frps -c ./frps.toml &amp;</code></p><p><img src="https://bu.dusays.com/2024/10/19/6713c2de079c0.png" alt="图床" title="frp"></p><p>输出可以通过 <code>cat /home/ubuntu/nohup.out</code> 查看</p><p><img src="https://bu.dusays.com/2024/10/19/6713c318002a8.png" alt="图床" title="frp"></p><p>如果要杀掉进程，首先通过指令 <code>ps aux | grep frp</code> 查看进程的pid号</p><p><img src="https://bu.dusays.com/2024/10/19/6713c317f37ee.png" alt="图床" title="frp"></p><p>输入 <code>kill -9 pid号</code> 即可杀掉frp进程</p><p><img src="https://bu.dusays.com/2024/10/19/6713c317f37ee.png" alt="图床" title="frp"></p><p>使用Windows远程访问树莓派：</p><p><code>Win + r</code> 打开<code>cmd</code></p><p>输入 <code>ssh -o Port=6000 用户名@服务器ip</code> 即可访问</p><p><img src="https://bu.dusays.com/2024/10/19/6713c317f2a15.png" alt="图床" title="frp"></p><h1 id="关机"><a href="#关机" class="headerlink" title="关机"></a>关机</h1><p>终端输入：<code>sudo poweroff</code></p>]]></content>
      
      
      <categories>
          
          <category> 一口一个树莓派 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Pycharm &amp; Anaconda 环境配置</title>
      <link href="/posts/e3b52eec.html"/>
      <url>/posts/e3b52eec.html</url>
      
        <content type="html"><![CDATA[<h1 id="Pycharm部分"><a href="#Pycharm部分" class="headerlink" title="Pycharm部分"></a>Pycharm部分</h1><h2 id="Pycharm是什么？"><a href="#Pycharm是什么？" class="headerlink" title="Pycharm是什么？"></a>Pycharm是什么？</h2><p><del>PyCharm是一种Python IDE（Integrated Development Environment，集成开发环境），带有一整套可以帮助用户在使用Python语言开发时提高其效率的工具，比如调试、语法高亮、项目管理、代码跳转、智能提示、自动完成、单元测试、版本控制。</del><br>简单来说，本质上用Windowds的记事本和Pycharm都可以写代码，但区别大概就是0氪的体验和史诗皮肤的差距。</p><h2 id="安装Pycharm专业版"><a href="#安装Pycharm专业版" class="headerlink" title="安装Pycharm专业版"></a>安装Pycharm专业版</h2><p>进入官网：<a href="https://www.jetbrains.com.cn/en-us/pycharm/download/?section=windows">https://www.jetbrains.com.cn/en-us/pycharm/download/?section=windows</a><br>点击下载：<img src="https://bu.dusays.com/2024/09/09/66deee73bee5c.png" alt="图床" title="Pycharm官网下载"><br>运行下载好的安装程序：<br>尽可能不要下到C盘(C盘是Windows系统盘，满了系统就会变卡)</p><p><img src="https://bu.dusays.com/2024/09/09/66deefab8aac6.png" alt="图床" title="Pycharm官网下载"> </p><p>这里全部勾选！</p><p><img src="https://bu.dusays.com/2024/09/09/66deefee581ea.png" alt="图床" title="Pycharm官网下载"> </p><p>点击安装即可：</p><p><img src="https://bu.dusays.com/2024/09/09/66deeff9e27a4.png" alt="本地路径" title="Pycharm官网下载"> </p><h2 id="专业版破解"><a href="#专业版破解" class="headerlink" title="专业版破解"></a>专业版<del>破解</del></h2><p>参考教程：<a href="https://o1h17wcfnl0.feishu.cn/docx/Eoj4dHlQHonlYZxZhoQctUSrnFU">https://o1h17wcfnl0.feishu.cn/docx/Eoj4dHlQHonlYZxZhoQctUSrnFU</a></p><h2 id="专业版汉化"><a href="#专业版汉化" class="headerlink" title="专业版汉化"></a>专业版汉化</h2><p>参考教程：<a href="https://oaugj4oxm5m.feishu.cn/docx/CBpBdDOWvoPxFVxQW1gcjdIznsh">https://oaugj4oxm5m.feishu.cn/docx/CBpBdDOWvoPxFVxQW1gcjdIznsh</a></p><p>如果不行，在设置中修改：<br><img src="https://bu.dusays.com/2024/09/09/66def007e6f6a.jpg" alt="图床" title="Pycharm汉化"> </p><h1 id="Anaconda部分"><a href="#Anaconda部分" class="headerlink" title="Anaconda部分"></a>Anaconda部分</h1><h2 id="Anaconda是什么？"><a href="#Anaconda是什么？" class="headerlink" title="Anaconda是什么？"></a>Anaconda是什么？</h2><p><del>Anaconda可以便捷获取包且对包能够进行管理，同时对环境可以统一管理的发行版本。Anaconda包含了conda、Python在内的超过180个科学包及其依赖项。</del><br>通俗来讲，你可以通过Anaconda为不同的python项目创建不同的编译环境。为什么要创建多个环境呢？举个例子，比如A项目很新，需要用3.12的python才行，但是B项目里面用到的库很老很老，只能用3.6的python，和A项目中的3.12的python并不兼容。所以为不同项目创建不同的环境是必要的，而Anaconda就是这样一个很方便的工具！</p><h2 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h2><p>进入官网：<a href="https://www.anaconda.com/download/success">https://www.anaconda.com/download/success</a><br>点击下载：<img src="https://bu.dusays.com/2024/09/09/66def0a863d59.png" alt="图床" title="Anaconda官网下载"> </p><p>安装步骤和Pycharm基本一致，注意最好不要安装到C盘，其他默认安装即可</p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>简单解释一下环境变量的作用，当你打算用Anaconda为你的项目创建一个新的虚拟环境，并在Pycharm中使用的时候，系统本身是不知道Pycharm和Anaconda有什么关系的，也就是说，我们需要先告诉系统有Anaconda这个东西(加入环境变量)，然后我们在Pycharm里面选择需要的python环境的时候，Pycharm就会问电脑哪些什么环境，此时系统就能找到Anaconda里建立的python环境了。</p><p>按下 <code>win + R</code> 并输入 <code>cmd</code> 打开命令提示符，(或者直接在底部搜索栏打开命令提示符)</p><p><img src="https://bu.dusays.com/2024/09/09/66def0feb5cc9.png" alt="图床" title="打开cmd"> </p><p>在命令行中输入 <code>sysdm.cpl</code> 按回车</p><p><img src="https://bu.dusays.com/2024/09/13/66e45cf1e44a6.png" alt="图床" title="打开环境变量"></p><p>打开【系统属性】窗体后，依次点击选项卡【高级】、【环境变量】按钮</p><p><img src="https://bu.dusays.com/2024/09/13/66e45cf1e0a5a.png" alt="图床" title="编辑环境变量"></p><p>在下方方框找到 <code>Path</code> 点击编辑</p><p><img src="https://bu.dusays.com/2024/09/09/66def116790ec.png" alt="图床" title="编辑环境变量"></p><p>点击 <code>新建</code> 添加如下三条路径，这里我是安装到了D盘根目录，具体路径根据自己安装位置修改 </p><p><img src="https://bu.dusays.com/2024/09/09/66def1167d223.png" alt="图床" title="打开环境变量"></p><p>完成后点击<code>确认</code> 即可</p><p>再打开 <code>cmd</code> 输入 <code>conda --version</code> 出现版本信息说明添加环境变量成功！</p><p><img src="https://bu.dusays.com/2024/09/09/66def15e0e215.png" alt="图床" title="检测环境变量"></p><h1 id="Pycharm和Anaconda关联部分"><a href="#Pycharm和Anaconda关联部分" class="headerlink" title="Pycharm和Anaconda关联部分"></a>Pycharm和Anaconda关联部分</h1><h2 id="学会使用Anaconda-Prompt"><a href="#学会使用Anaconda-Prompt" class="headerlink" title="学会使用Anaconda Prompt"></a>学会使用Anaconda Prompt</h2><p>在底部搜索栏中搜索 <code>Anaconda Prompt</code>，建议在桌面添加快捷方式，以后经常会用到</p><p><img src="https://bu.dusays.com/2024/09/09/66def17f5d267.png" alt="图床" title="打开Prompt"></p><h3 id="更换下载源"><a href="#更换下载源" class="headerlink" title="更换下载源"></a>更换下载源</h3><p>在Anaconda中下载python中各种库，默认的下载源在国外，访问速度较慢，因此我们现在要更换为国内镜像源，这里以清华源为例：</p><p>在Anaconda Prompt中依次输入如下指令：</p><p><code>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</code></p><p><code>conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</code></p><p><code>conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/fastai/</code></p><p><code>conda config --set show_channel_urls yes</code></p><p>输入指令验证是否配置成功 <code>conda config --show channels</code></p><p><img src="https://bu.dusays.com/2024/09/09/66def18031685.png" alt="图床" title="Anaconda换源"></p><p>如果出现错误，可更换回默认源重新配置 <code>conda config --remove-key channels</code></p><h3 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h3><p>打开Anaconda Prompt：</p><p>输入 <code>conda env list</code>， 可查看当前Anaconda中存在的虚拟环境</p><p>输入 <code>conda create -n venv python==3.9.11</code>， 创建一个名为 <code>venv</code> 的python环境，版本为<code>3.9.11</code></p><p><img src="https://bu.dusays.com/2024/09/09/66def18106505.png" alt="图床" title="创建虚拟环境"></p><p>输入 <code>y</code> 确认安装</p><p>安装完毕之后，再次输入 <code>conda env list</code> 即可看到新增的名为 <code>venv</code> 的虚拟环境</p><h3 id="激活虚拟环境"><a href="#激活虚拟环境" class="headerlink" title="激活虚拟环境"></a>激活虚拟环境</h3><p>打开Anaconda Prompt：</p><p>输入 <code>conda activate venv</code> 激活名为 <code>venv</code> 的虚拟环境</p><p><img src="https://bu.dusays.com/2024/09/09/66def1d2e301e.png" alt="图床" title="激活虚拟环境"></p><p>此时可以看到，括号中的 <code>base</code> 变为了 <code>venv</code>，即当前正在 <code>venv</code> 环境中</p><p>如果要退出这个虚拟环境，输入 <code>conda deactivate</code> ， 可以看到括号里面又变成了 <code>base</code></p><h3 id="为虚拟环境安装所需库"><a href="#为虚拟环境安装所需库" class="headerlink" title="为虚拟环境安装所需库"></a>为虚拟环境安装所需库</h3><p>当我们使用 <code>activate</code> 激活所用的虚拟环境后，使用 <code>pip</code> 命令即可为当前python安装目标库</p><p>以 <code>numpy</code> 为例，在Anaconda Prompt中输入 <code>pip install numpy</code> :</p><p><img src="https://bu.dusays.com/2024/09/09/66def1d2eb31e.png" alt="图床" title="pip安装"></p><p>显示 <code>Successfully installed xxx</code> 说明安装成功</p><p>同时，输入 <code>pip list</code> 也可以查看当前环境所安装的库</p><p><img src="https://bu.dusays.com/2024/09/09/66def1d2ea455.png" alt="图床" title="查看安装的库"></p><p>如果不需要某个库，可以使用 <code>pip uninstall xxx</code> 指令删除对应库</p><p><img src="https://bu.dusays.com/2024/09/09/66def1d2ed9d6.png" alt="图床" title="pip删除"></p><h3 id="退出-amp-删除虚拟环境"><a href="#退出-amp-删除虚拟环境" class="headerlink" title="退出&amp;删除虚拟环境"></a>退出&amp;删除虚拟环境</h3><p>如果不再需要某个虚拟环境，先用 <code>conda deactivate</code> 退出当前虚拟环境，再输入 <code>conda remove -n venv --all</code> 即可删除名为 <code>venv</code> 的整个python环境</p><p><img src="https://bu.dusays.com/2024/09/09/66def1d2eca15.png" alt="图床" title="删除虚拟环境"></p><h2 id="Pycharm中配置Anaconda环境"><a href="#Pycharm中配置Anaconda环境" class="headerlink" title="Pycharm中配置Anaconda环境"></a>Pycharm中配置Anaconda环境</h2><p>打开<del>破解的</del>专业版Pycharm，点击右下角，点击添加本地解释器</p><p><img src="https://bu.dusays.com/2024/09/09/66def2685c29f.png" alt="图床" title="添加Anaconda环境"></p><p>依次选择以下选项，其中 <code>conda.exe</code> 位置取决于你之前下载Anaconda所选的盘，但是一定在<code>Scripts</code> 文件夹内</p><p><img src="https://bu.dusays.com/2024/09/09/66def29261f45.png" alt="图床" title="添加Anaconda环境"></p><p>确定完以后，在右下角就能选择对应的python环境了</p><p><img src="https://bu.dusays.com/2024/09/09/66def38bd3a71.png" alt="图床" title="添加Anaconda环境"></p><h2 id="HELLO-WORLD"><a href="#HELLO-WORLD" class="headerlink" title="HELLO, WORLD!"></a>HELLO, WORLD!</h2><p>以上就是配置Anaconda和Pycharm的所有步骤啦，恭喜恭喜！</p><p>现在让我们用搭建好的环境运行第一个python代码吧！</p><p>首先在Pycharm的左上角创建一个项目文件夹：</p><p><img src="https://bu.dusays.com/2024/09/09/66def397ec4b0.png" alt="图床" title="创建项目文件夹"></p><p>输入 <code>print(&quot;hello, world!&quot;)</code> ， 点击左上角运行</p><p><img src="https://bu.dusays.com/2024/09/09/66def3a17cd1d.png" alt="图床" title="hello,world!"></p><p>你好，世界！</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习入门 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/js/cursor.js"/>
      <url>/js/cursor.js</url>
      
        <content type="html"><![CDATA[var CURSOR;Math.lerp = (a, b, n) => (1 - n) * a + n * b;const getStyle = (el, attr) => {    try {        return window.getComputedStyle            ? window.getComputedStyle(el)[attr]            : el.currentStyle[attr];    } catch (e) {}    return "";};class Cursor {    constructor() {        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    move(left, top) {        this.cursor.style["left"] = `${left}px`;        this.cursor.style["top"] = `${top}px`;    }    create() {        if (!this.cursor) {            this.cursor = document.createElement("div");            this.cursor.id = "cursor";            this.cursor.classList.add("hidden");            document.body.append(this.cursor);        }        var el = document.getElementsByTagName('*');        for (let i = 0; i < el.length; i++)            if (getStyle(el[i], "cursor") == "pointer")                this.pt.push(el[i].outerHTML);        document.body.appendChild((this.scr = document.createElement("style")));        // 这里改变鼠标指针的颜色 由svg生成        this.scr.innerHTML = `* {cursor: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' width='8px' height='8px'><circle cx='4' cy='4' r='4' opacity='.5'/></svg>") 4 4, auto}`;    }    refresh() {        this.scr.remove();        this.cursor.classList.remove("hover");        this.cursor.classList.remove("active");        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    init() {        document.onmouseover  = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.add("hover");        document.onmouseout   = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.remove("hover");        document.onmousemove  = e => {(this.pos.curr == null) && this.move(e.clientX - 8, e.clientY - 8); this.pos.curr = {x: e.clientX - 8, y: e.clientY - 8}; this.cursor.classList.remove("hidden");};        document.onmouseenter = e => this.cursor.classList.remove("hidden");        document.onmouseleave = e => this.cursor.classList.add("hidden");        document.onmousedown  = e => this.cursor.classList.add("active");        document.onmouseup    = e => this.cursor.classList.remove("active");    }    render() {        if (this.pos.prev) {            this.pos.prev.x = Math.lerp(this.pos.prev.x, this.pos.curr.x, 0.15);            this.pos.prev.y = Math.lerp(this.pos.prev.y, this.pos.curr.y, 0.15);            this.move(this.pos.prev.x, this.pos.prev.y);        } else {            this.pos.prev = this.pos.curr;        }        requestAnimationFrame(() => this.render());    }}(() => {    CURSOR = new Cursor();    // 需要重新获取列表时，使用 CURSOR.refresh()})();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {  font-family: ZhuZiAYuanJWD;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);  font-display: swap;  font-weight: lighter;}div#menus {  font-family: "ZhuZiAYuanJWD";}h1#site-title {  font-family: ZhuZiAYuanJWD;  font-size: 3em !important;}a.article-title,a.blog-slider__title,a.categoryBar-list-link,h1.post-title {  font-family: ZhuZiAYuanJWD;}.iconfont {  font-family: "iconfont" !important;  font-size: 3em;  /* 可以定义图标大小 */  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}/* 时间轴生肖icon */svg.icon {  /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */  width: 1em;  height: 1em;  /* width和height定义图标的默认宽度和高度*/  vertical-align: -0.15em;  fill: currentColor;  overflow: hidden;}.icon-zhongbiao::before {  color: #f7c768;}/* 解决artitalk的图标问题 */#uploadSource > svg {  width: 1.19em;  height: 1.5em;}/*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */#page-header:not(.not-top-img):before {  background-color: transparent !important;}/* 首页文章卡片 */#recent-posts > .recent-post-item {  background: rgba(255, 255, 255, 0.9);}/* 首页侧栏卡片 */#aside-content .card-widget {  background: rgba(255, 255, 255, 0.9);}/* 文章页面正文背景 */div#post {  background: rgba(255, 255, 255, 0.9);}/* 分页页面 */div#page {  background: rgba(255, 255, 255, 0.9);}/* 归档页面 */div#archive {  background: rgba(255, 255, 255, 0.9);}/* 标签页面 */div#tag {  background: rgba(255, 255, 255, 0.9);}/* 分类页面 */div#category {  background: rgba(255, 255, 255, 0.9);}/*夜间模式伪类遮罩层透明*/[data-theme="dark"] #recent-posts > .recent-post-item {  background: #121212;}[data-theme="dark"] .card-widget {  background: #121212 !important;}[data-theme="dark"] div#post {  background: #121212 !important;}[data-theme="dark"] div#tag {  background: #121212 !important;}[data-theme="dark"] div#archive {  background: #121212 !important;}[data-theme="dark"] div#page {  background: #121212 !important;}[data-theme="dark"] div#category {  background: #121212 !important;}[data-theme="dark"] div#category {  background: transparent !important;}/* 页脚透明 */#footer {  background: transparent !important;}/* 头图透明 */#page-header {  background: transparent !important;}#rightside > div > button {  border-radius: 5px;}/* 滚动条 */::-webkit-scrollbar {  width: 10px;  height: 10px;}::-webkit-scrollbar-thumb {  background-color: #3b70fc;  border-radius: 2em;}::-webkit-scrollbar-corner {  background-color: transparent;}::-moz-selection {  color: #fff;  background-color: #3b70fc;}/* 音乐播放器 *//*.aplayer .aplayer-lrc {  display: none !important;}*/.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {  left: -66px !important;  transition: all 0.3s;  /* 默认情况下缩进左侧66px，只留一点箭头部分 */}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {  left: 0 !important;  transition: all 0.3s;  /* 鼠标悬停是左侧缩进归零，完全显示按钮 */}.aplayer.aplayer-fixed {  z-index: 999999 !important;}/* 评论框  */.vwrap {  box-shadow: 2px 2px 5px #bbb;  background: rgba(255, 255, 255, 0.3);  border-radius: 8px;  padding: 30px;  margin: 30px 0px 30px 0px;}/* 设置评论框 */.vcard {  box-shadow: 2px 2px 5px #bbb;  background: rgba(255, 255, 255, 0.3);  border-radius: 8px;  padding: 30px;  margin: 30px 0px 0px 0px;}/* md网站下划线 */#article-container a:hover {  text-decoration: none !important;}#article-container #hpp_talk p img {  display: inline;}/* 404页面 */#error-wrap {  position: absolute;  top: 40%;  right: 0;  left: 0;  margin: 0 auto;  padding: 0 1rem;  max-width: 1000px;  transform: translate(0, -50%);}#error-wrap .error-content {  display: flex;  flex-direction: row;  justify-content: center;  align-items: center;  margin: 0 1rem;  height: 18rem;  border-radius: 8px;  background: var(--card-bg);  box-shadow: var(--card-box-shadow);  transition: all 0.3s;}#error-wrap .error-content .error-img {  box-flex: 1;  flex: 1;  height: 100%;  border-top-left-radius: 8px;  border-bottom-left-radius: 8px;  background-color: #3b70fc;  background-position: center;  background-size: cover;}#error-wrap .error-content .error-info {  box-flex: 1;  flex: 1;  padding: 0.5rem;  text-align: center;  font-size: 14px;  font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;}#error-wrap .error-content .error-info .error_title {  margin-top: -4rem;  font-size: 9em;}#error-wrap .error-content .error-info .error_subtitle {  margin-top: -3.5rem;  word-break: break-word;  font-size: 1.6em;}#error-wrap .error-content .error-info a {  display: inline-block;  margin-top: 0.5rem;  padding: 0.3rem 1.5rem;  background: var(--btn-bg);  color: var(--btn-color);}#body-wrap.error .aside-list {  display: flex;  flex-direction: row;  flex-wrap: nowrap;  bottom: 0px;  position: absolute;  padding: 1rem;  width: 100%;  overflow: scroll;}#body-wrap.error .aside-list .aside-list-group {  display: flex;  flex-direction: row;  flex-wrap: nowrap;  max-width: 1200px;  margin: 0 auto;}#body-wrap.error .aside-list .aside-list-item {  padding: 0.5rem;}#body-wrap.error .aside-list .aside-list-item img {  width: 100%;  object-fit: cover;  border-radius: 12px;}#body-wrap.error .aside-list .aside-list-item .thumbnail {  overflow: hidden;  width: 230px;  height: 143px;  background: var(--anzhiyu-card-bg);  display: flex;}#body-wrap.error .aside-list .aside-list-item .content .title {  -webkit-line-clamp: 2;  overflow: hidden;  display: -webkit-box;  -webkit-box-orient: vertical;  line-height: 1.5;  justify-content: center;  align-items: flex-end;  align-content: center;  padding-top: 0.5rem;  color: white;}#body-wrap.error .aside-list .aside-list-item .content time {  display: none;}/* 代码框主题 */#article-container figure.highlight {  border-radius: 10px;}/* 日间模式生效 */[data-theme="light"] #site-name,[data-theme="light"] #site-title {  animation: light_15px 10s linear infinite;}[data-theme="light"] #site-subtitle {  animation: light_10px 10s linear infinite;}[data-theme="light"] #post-info {  animation: light_5px 10s linear infinite;}/* 夜间模式生效 */[data-theme="dark"] #site-name,[data-theme="dark"] #site-title {  animation: light_15px 10s linear infinite;}[data-theme="dark"] #site-subtitle {  animation: light_10px 10s linear infinite;}[data-theme="dark"] #post-info {  animation: light_5px 10s linear infinite;}/* 关键帧描述 */@keyframes light_15px {  0% {    text-shadow: #5636ed 0 0 15px;  }  12.5% {    text-shadow: #11ee5e 0 0 15px;  }  25% {    text-shadow: #f14747 0 0 15px;  }  37.5% {    text-shadow: #f1a247 0 0 15px;  }  50% {    text-shadow: #f1ee47 0 0 15px;  }  50% {    text-shadow: #b347f1 0 0 15px;  }  62.5% {    text-shadow: #002afa 0 0 15px;  }  75% {    text-shadow: #ed709b 0 0 15px;  }  87.5% {    text-shadow: #39c5bb 0 0 15px;  }  100% {    text-shadow: #5636ed 0 0 15px;  }}@keyframes light_10px {  0% {    text-shadow: #5636ed 0 0 10px;  }  12.5% {    text-shadow: #11ee5e 0 0 10px;  }  25% {    text-shadow: #f14747 0 0 10px;  }  37.5% {    text-shadow: #f1a247 0 0 10px;  }  50% {    text-shadow: #f1ee47 0 0 10px;  }  50% {    text-shadow: #b347f1 0 0 10px;  }  62.5% {    text-shadow: #002afa 0 0 10px;  }  75% {    text-shadow: #ed709b 0 0 10px;  }  87.5% {    text-shadow: #39c5bb 0 0 10px;  }  100% {    text-shadow: #5636ed 0 0 10px;  }}@keyframes light_5px {  0% {    text-shadow: #5636ed 0 0 5px;  }  12.5% {    text-shadow: #11ee5e 0 0 5px;  }  25% {    text-shadow: #f14747 0 0 5px;  }  37.5% {    text-shadow: #f1a247 0 0 15px;  }  50% {    text-shadow: #f1ee47 0 0 5px;  }  50% {    text-shadow: #b347f1 0 0 5px;  }  62.5% {    text-shadow: #002afa 0 0 5px;  }  75% {    text-shadow: #ed709b 0 0 5px;  }  87.5% {    text-shadow: #39c5bb 0 0 5px;  }  100% {    text-shadow: #5636ed 0 0 5px;  }}/* 鼠标样式 */#cursor {  position: fixed;  width: 16px;  height: 16px;  /* 这里改变跟随的底色 */  background: rgb(27, 188, 228);  border-radius: 8px;  opacity: 0.25;  z-index: 10086;  pointer-events: none;  transition: 0.2s ease-in-out;  transition-property: background, opacity, transform;}#cursor.hidden {  opacity: 0;}#cursor.hover {  opacity: 0.1;  transform: scale(2.5);  -webkit-transform: scale(2.5);  -moz-transform: scale(2.5);  -ms-transform: scale(2.5);  -o-transform: scale(2.5);}#cursor.active {  opacity: 0.5;  transform: scale(0.5);  -webkit-transform: scale(0.5);  -moz-transform: scale(0.5);  -ms-transform: scale(0.5);  -o-transform: scale(0.5);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
