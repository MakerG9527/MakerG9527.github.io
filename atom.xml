<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Leader Guo</title>
  <icon>https://www.gravatar.com/avatar/a82a24ce92d7a2f4f4423c74b100d97f</icon>
  <subtitle>Blog</subtitle>
  <link href="http://makerg9527.github.io/atom.xml" rel="self"/>
  
  <link href="http://makerg9527.github.io/"/>
  <updated>2024-09-08T10:06:28.983Z</updated>
  <id>http://makerg9527.github.io/</id>
  
  <author>
    <name>Leader Guo</name>
    <email>lidguo@foxmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Pycharm &amp; Anaconda 环境配置</title>
    <link href="http://makerg9527.github.io/posts/3b6f3e08.html"/>
    <id>http://makerg9527.github.io/posts/3b6f3e08.html</id>
    <published>2024-09-08T09:57:31.000Z</published>
    <updated>2024-09-08T10:06:28.983Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Pycharm部分"><a href="#1-Pycharm部分" class="headerlink" title="1. Pycharm部分"></a>1. Pycharm部分</h2><h3 id="1-1-Pycharm是什么？"><a href="#1-1-Pycharm是什么？" class="headerlink" title="1.1 Pycharm是什么？"></a>1.1 Pycharm是什么？</h3><p><del>PyCharm是一种Python IDE（Integrated Development Environment，集成开发环境），带有一整套可以帮助用户在使用Python语言开发时提高其效率的工具，比如调试、语法高亮、项目管理、代码跳转、智能提示、自动完成、单元测试、版本控制。</del><br>简单来说，本质上用Pycharm和Windowds的记事本都可以写python代码，但区别大概就是一个在纸上用笔写字和一个在地上用石头刻字。</p><h3 id="1-2-安装Pycharm专业版"><a href="#1-2-安装Pycharm专业版" class="headerlink" title="1.2 安装Pycharm专业版"></a>1.2 安装Pycharm专业版</h3><p>进入官网：<a href="https://www.jetbrains.com.cn/en-us/pycharm/download/?section=windows">https://www.jetbrains.com.cn/en-us/pycharm/download/?section=windows</a><br>点击下载：<img src="/posts/3b6f3e08.htm/1.2.1.png" alt="本地路径" title="Pycharm官网下载"><br>运行下载好的安装程序：<br>尽可能不要下到C盘(C盘是Windows系统盘，满了系统就会变卡)</p><p><img src="/posts/3b6f3e08.htm/1.2.2.png" alt="本地路径" title="Pycharm官网下载"> </p><p>这里全部勾选！</p><p><img src="/posts/3b6f3e08.htm/1.2.3.png" alt="本地路径" title="Pycharm官网下载"> </p><p>点击安装即可：</p><p><img src="/posts/3b6f3e08.htm/1.2.4.png" alt="本地路径" title="Pycharm官网下载"> </p><h3 id="1-3-专业版破解"><a href="#1-3-专业版破解" class="headerlink" title="1.3 专业版破解"></a>1.3 专业版<del>破解</del></h3><p>参考教程：<a href="https://o1h17wcfnl0.feishu.cn/docx/Eoj4dHlQHonlYZxZhoQctUSrnFU">https://o1h17wcfnl0.feishu.cn/docx/Eoj4dHlQHonlYZxZhoQctUSrnFU</a></p><h3 id="1-4-专业版汉化"><a href="#1-4-专业版汉化" class="headerlink" title="1.4 专业版汉化"></a>1.4 专业版汉化</h3><p>参考教程：<a href="https://oaugj4oxm5m.feishu.cn/docx/CBpBdDOWvoPxFVxQW1gcjdIznsh">https://oaugj4oxm5m.feishu.cn/docx/CBpBdDOWvoPxFVxQW1gcjdIznsh</a></p><p>如果不行，在设置中修改：<br><img src="/posts/3b6f3e08.htm/1.2.5.jpg" alt="本地路径" title="Pycharm汉化"> </p><h2 id="2-Anaconda部分"><a href="#2-Anaconda部分" class="headerlink" title="2. Anaconda部分"></a>2. Anaconda部分</h2><h3 id="2-1-Anaconda是什么？"><a href="#2-1-Anaconda是什么？" class="headerlink" title="2.1 Anaconda是什么？"></a>2.1 Anaconda是什么？</h3><p><del>Anaconda可以便捷获取包且对包能够进行管理，同时对环境可以统一管理的发行版本。Anaconda包含了conda、Python在内的超过180个科学包及其依赖项。</del><br>通俗来讲，你可以通过Anaconda为不同的python项目创建不同的编译环境。为什么要创建多个环境呢？举个例子，比如A项目很新，需要用3.12的python才行，但是B项目里面用到的库很老很老，只能用3.6的python，和A项目中的3.12的python并不兼容。所以为不同项目创建不同的环境是必要的，而Anaconda就是这样一个很方便的工具！</p><h3 id="2-2-安装Anaconda"><a href="#2-2-安装Anaconda" class="headerlink" title="2.2 安装Anaconda"></a>2.2 安装Anaconda</h3><p>进入官网：<a href="https://www.anaconda.com/download/success">https://www.anaconda.com/download/success</a><br>点击下载：<img src="/posts/3b6f3e08.htm/2.2.1.png" alt="本地路径" title="Anaconda官网下载"> </p><p>安装步骤和Pycharm基本一致，注意最好不要安装到C盘，其他默认安装即可</p><h3 id="2-3-配置环境变量"><a href="#2-3-配置环境变量" class="headerlink" title="2.3 配置环境变量"></a>2.3 配置环境变量</h3><p>简单解释一下环境变量的作用，当你打算用Anaconda为你的项目创建一个新的虚拟环境，并在Pycharm中使用的时候，系统本身是不知道Pycharm和Anaconda有什么关系的，也就是说，我们需要先告诉系统有Anaconda这个东西(加入环境变量)，然后我们在Pycharm里面选择需要的python环境的时候，Pycharm就会问电脑哪些什么环境，此时系统就能找到Anaconda里建立的python环境了。</p><p>按下 <code>win + R</code> 并输入 <code>cmd</code> 打开命令提示符，(或者直接在底部搜索栏打开命令提示符)</p><p><img src="/posts/3b6f3e08.htm/2.2.2.png" alt="本地路径" title="打开cmd"> </p><p>在命令行中输入 <code>rundll32 sysdm.cpl,EditEnvironmentVariables</code> 按回车</p><p><img src="/posts/3b6f3e08.htm/2.2.3.png" alt="本地路径" title="打开环境变量"></p><p>在下方方框找到 <code>Path</code> 点击编辑</p><p><img src="/posts/3b6f3e08.htm/2.2.4.png" alt="本地路径" title="编辑环境变量"></p><p>点击 <code>新建</code> 添加如下三条路径，这里我是安装到了D盘根目录，具体路径根据自己安装位置修改 </p><p><img src="/posts/3b6f3e08.htm/2.2.5.png" alt="本地路径" title="打开环境变量"></p><p>完成后点击<code>确认</code> 即可</p><p>再打开 <code>cmd</code> 输入 <code>conda --version</code> 出现版本信息说明添加环境变量成功！</p><p><img src="/posts/3b6f3e08.htm/2.2.6.png" alt="本地路径" title="检测环境变量"></p><h2 id="3-Pycharm和Anaconda关联部分"><a href="#3-Pycharm和Anaconda关联部分" class="headerlink" title="3. Pycharm和Anaconda关联部分"></a>3. Pycharm和Anaconda关联部分</h2><h3 id="3-1-学会使用Anaconda-Prompt"><a href="#3-1-学会使用Anaconda-Prompt" class="headerlink" title="3.1 学会使用Anaconda Prompt"></a>3.1 学会使用Anaconda Prompt</h3><p>在底部搜索栏中搜索 <code>Anaconda Prompt</code>，建议在桌面添加快捷方式，以后经常会用到</p><p><img src="/posts/3b6f3e08.htm/3.1.1.png" alt="本地路径" title="打开Prompt"></p><h4 id="3-1-1-更换下载源"><a href="#3-1-1-更换下载源" class="headerlink" title="3.1.1 更换下载源"></a>3.1.1 更换下载源</h4><p>在Anaconda中下载python中各种库，默认的下载源在国外，访问速度较慢，因此我们现在要更换为国内镜像源，这里以清华源为例：</p><p>在Anaconda Prompt中依次输入如下指令：</p><p><code>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</code></p><p><code>conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</code></p><p><code>conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/fastai/</code></p><p><code>conda config --set show_channel_urls yes</code></p><p>输入指令验证是否配置成功 <code>conda config --show channels</code></p><p><img src="/posts/3b6f3e08.htm/3.1.2.png" alt="本地路径" title="Anaconda换源"></p><p>如果出现错误，可更换回默认源重新配置 <code>conda config --remove-key channels</code></p><h4 id="3-1-2-创建虚拟环境"><a href="#3-1-2-创建虚拟环境" class="headerlink" title="3.1.2 创建虚拟环境"></a>3.1.2 创建虚拟环境</h4><p>打开Anaconda Prompt：</p><p>输入 <code>conda env list</code>， 可查看当前Anaconda中存在的虚拟环境</p><p>输入 <code>conda create -n venv python==3.9.11</code>， 创建一个名为 <code>venv</code> 的python环境，版本为<code>3.9.11</code></p><p><img src="/posts/3b6f3e08.htm/3.1.3.png" alt="本地路径" title="创建虚拟环境"></p><p>输入 <code>y</code> 确认安装</p><p>安装完毕之后，再次输入 <code>conda env list</code> 即可看到新增的名为 <code>venv</code> 的虚拟环境</p><h3 id="3-1-3-激活虚拟环境"><a href="#3-1-3-激活虚拟环境" class="headerlink" title="3.1.3 激活虚拟环境"></a>3.1.3 激活虚拟环境</h3><p>打开Anaconda Prompt：</p><p>输入 <code>conda activate venv</code> 激活名为 <code>venv</code> 的虚拟环境</p><p><img src="/posts/3b6f3e08.htm/3.1.4.png" alt="本地路径" title="激活虚拟环境"></p><p>此时可以看到，括号中的 <code>base</code> 变为了 <code>venv</code>，即当前正在 <code>venv</code> 环境中</p><p>如果要退出这个虚拟环境，输入 <code>conda deactivate</code> ， 可以看到括号里面又变成了 <code>base</code></p><h3 id="3-1-4-为虚拟环境安装所需库"><a href="#3-1-4-为虚拟环境安装所需库" class="headerlink" title="3.1.4 为虚拟环境安装所需库"></a>3.1.4 为虚拟环境安装所需库</h3><p>当我们使用 <code>activate</code> 激活所用的虚拟环境后，使用 <code>pip</code> 命令即可为当前python安装目标库</p><p>以 <code>numpy</code> 为例，在Anaconda Prompt中输入 <code>pip install numpy</code> :</p><p><img src="/posts/3b6f3e08.htm/3.1.5.png" alt="本地路径" title="pip安装"></p><p>显示 <code>Successfully installed xxx</code> 说明安装成功</p><p>同时，输入 <code>pip list</code> 也可以查看当前环境所安装的库</p><p><img src="/posts/3b6f3e08.htm/3.1.6.png" alt="本地路径" title="查看安装的库"></p><p>如果不需要某个库，可以使用 <code>pip uninstall xxx</code> 指令删除对应库</p><p><img src="/posts/3b6f3e08.htm/3.1.7.png" alt="本地路径" title="pip删除"></p><h3 id="3-1-5-退出-amp-删除虚拟环境"><a href="#3-1-5-退出-amp-删除虚拟环境" class="headerlink" title="3.1.5 退出&amp;删除虚拟环境"></a>3.1.5 退出&amp;删除虚拟环境</h3><p>如果不再需要某个虚拟环境，先用 <code>conda deactivate</code> 退出当前虚拟环境，再输入 <code>conda remove -n venv --all</code> 即可删除名为 <code>venv</code> 的整个python环境</p><p><img src="/posts/3b6f3e08.htm/3.1.8.png" alt="本地路径" title="删除虚拟环境"></p><h3 id="3-2-Pycharm中配置Anaconda环境"><a href="#3-2-Pycharm中配置Anaconda环境" class="headerlink" title="3.2 Pycharm中配置Anaconda环境"></a>3.2 Pycharm中配置Anaconda环境</h3><p>打开<del>破解的</del>专业版Pycharm，点击右下角，点击添加本地解释器</p><p><img src="/posts/3b6f3e08.htm/3.2.1.png" alt="本地路径" title="添加Anaconda环境"></p><p>依次选择以下选项，其中 <code>conda.exe</code> 位置取决于你之前下载Anaconda所选的盘，但是一定在<code>Scripts</code> 文件夹内</p><p>确定完以后，在右下角就能选择对应的python环境了</p><p><img src="/posts/3b6f3e08.htm/3.2.3.png" alt="本地路径" title="添加Anaconda环境"></p><h3 id="3-3-HELLO-WORLD"><a href="#3-3-HELLO-WORLD" class="headerlink" title="3.3 HELLO, WORLD!"></a>3.3 HELLO, WORLD!</h3><p>以上就是配置Anaconda和Pycharm的所有步骤啦，恭喜恭喜！</p><p>现在让我们用搭建好的环境运行第一个python代码吧！</p><p>首先在Pycharm的左上角创建一个项目文件夹：</p><p><img src="/posts/3b6f3e08.htm/3.3.1.png" alt="本地路径" title="创建项目文件夹"></p><p>输入 <code>print(&quot;hello, world!&quot;)</code> ， 点击左上角运行</p><p><img src="/posts/3b6f3e08.htm/3.3.2.png" alt="本地路径" title="创建项目文件夹"></p><p>你好，世界！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Pycharm部分&quot;&gt;&lt;a href=&quot;#1-Pycharm部分&quot; class=&quot;headerlink&quot; title=&quot;1. Pycharm部分&quot;&gt;&lt;/a&gt;1. Pycharm部分&lt;/h2&gt;&lt;h3 id=&quot;1-1-Pycharm是什么？&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    
  </entry>
  
</feed>
